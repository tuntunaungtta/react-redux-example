{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\tuntun\\\\Downloads\\\\react-redux-example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from \"./actionTypes\";\nconst initialState = {\n  articles: [{\n    id: 1,\n    title: \"post 1\",\n    body: \"Quisque cursus, metus vitae pharetra\"\n  }, {\n    id: 2,\n    title: \"post 2\",\n    body: \"Quisque cursus, metus vitae pharetra\"\n  }]\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_ARTICLE:\n      const newArticle = {\n        id: Math.random(),\n        // not really unique but it's just an example\n        title: action.article.title,\n        body: action.article.body\n      };\n      return _objectSpread({}, state, {\n        articles: state.articles.concat(newArticle)\n      });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/tuntun/Downloads/react-redux-example/src/store/reducer.js"],"names":["actionTypes","initialState","articles","id","title","body","reducer","state","action","type","ADD_ARTICLE","newArticle","Math","random","article","concat"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,QAAhB;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GADQ,EAER;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,QAAhB;AAA0BC,IAAAA,IAAI,EAAE;AAAhC,GAFQ;AADS,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAW,CAACU,WAAjB;AACE,YAAMC,UAAU,GAAG;AACjBR,QAAAA,EAAE,EAAES,IAAI,CAACC,MAAL,EADa;AACE;AACnBT,QAAAA,KAAK,EAAEI,MAAM,CAACM,OAAP,CAAeV,KAFL;AAGjBC,QAAAA,IAAI,EAAEG,MAAM,CAACM,OAAP,CAAeT;AAHJ,OAAnB;AAKA,+BACKE,KADL;AAEEL,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAea,MAAf,CAAsBJ,UAAtB;AAFZ;AAPJ;;AAYA,SAAOJ,KAAP;AACD,CAdD;;AAeA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  articles: [\r\n    { id: 1, title: \"post 1\", body: \"Quisque cursus, metus vitae pharetra\" },\r\n    { id: 2, title: \"post 2\", body: \"Quisque cursus, metus vitae pharetra\" }\r\n  ]\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_ARTICLE:\r\n      const newArticle = {\r\n        id: Math.random(), // not really unique but it's just an example\r\n        title: action.article.title,\r\n        body: action.article.body\r\n      };\r\n      return {\r\n        ...state,\r\n        articles: state.articles.concat(newArticle)\r\n      };\r\n  }\r\n  return state;\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}